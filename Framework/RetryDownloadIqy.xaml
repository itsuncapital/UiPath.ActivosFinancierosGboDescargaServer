<Activity mc:Ignorable="sap sap2010" x:Class="iqy" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:be="clr-namespace:BalaReva.EasyDataTable;assembly=BalaReva.EasyDataTable" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_fullNameFileLog" Type="InArgument(x:String)" />
    <x:Property Name="in_xlsxPath" Type="InArgument(x:String)" />
  </x:Members>
  <this:iqy.in_fullNameFileLog>
    <InArgument x:TypeArguments="x:String" />
  </this:iqy.in_fullNameFileLog>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1142.4,1056.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>iqy_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftTeams.Activities.Teams</x:String>
      <x:String>UiPath.MicrosoftTeams.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>BalaReva.EasyDataTable</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="98">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Beta</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftTeams.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>BalaReva.EasyDataTable</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="iqy" sap:VirtualizedContainerService.HintSize="478.4,992" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="existFolderToCreate" />
      <Variable x:TypeArguments="sd:DataTable" Name="Dtquery" />
      <Variable x:TypeArguments="sd:DataTable" Name="DtqueryFiltred" />
      <Variable x:TypeArguments="x:String" Name="FolderToCreate" />
      <Variable x:TypeArguments="s:String[]" Name="SqlId" />
      <Variable x:TypeArguments="x:String" Name="PdfUlr" />
      <Variable x:TypeArguments="x:Int32" Name="ErrorContador" />
      <Variable x:TypeArguments="x:String" Name="IdDelPjCorrectName" />
      <Variable x:TypeArguments="s:String[]" Name="arrayIdDelPjCorrectName" />
      <Variable x:TypeArguments="x:String" Name="RowCase" />
      <Variable x:TypeArguments="sd:DataTable" Name="RowsToError" />
      <Variable x:TypeArguments="sd:DataTable" Name="DTToCompare" />
      <Variable x:TypeArguments="x:String" Name="FullFileName" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_descargarSolo" />
      <Variable x:TypeArguments="s:String[]" Name="descargarSolo" />
      <Variable x:TypeArguments="x:Object" Name="lastNumber" />
      <Variable x:TypeArguments="x:Int32" Name="IndexLastNumber" />
      <Variable x:TypeArguments="x:Object" Name="firstNumber" />
      <Variable x:TypeArguments="x:String" Name="PDFNombre" />
      <Variable x:TypeArguments="x:Boolean" Name="existReemplazar" />
      <Variable x:TypeArguments="x:Boolean" Name="existErrorCargarWeb" />
      <Variable x:TypeArguments="x:String" Name="FolderName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch sustituir lo de dentro por SQL" sap:VirtualizedContainerService.HintSize="436.8,344.8" sap2010:WorkflowViewState.IdRef="TryCatch_44">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLRetry workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_110" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLRetry.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_Documentos">[DtqueryFiltred]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_44">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="525.6,902.4" sap2010:WorkflowViewState.IdRef="Sequence_186">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_96" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText" xml:space="preserve">["No se ha podido abrir el excel con el histórico de los documentos ya descargados, posiblemente porque se dejó abierto. Por favor, cierre todos los exel y a continuación, haga click en aceptar para volver a intentarlo"  + exception.Message]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="484,457.6" sap2010:WorkflowViewState.IdRef="If_49">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,268.8" sap2010:WorkflowViewState.IdRef="Sequence_184">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_7" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_185">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Haga click en aceptar cuando cierre todos los archivos excel&quot;]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:InterruptibleDoWhile Condition="[DtqueryFiltred.Rows.Count &gt; 0]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="436.8,514.4" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="241.6,347.2" sap2010:WorkflowViewState.IdRef="Sequence_223">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_219">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange AddHeaders="True" DataTable="[DT_descargarSolo]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="[in_xlsxPath]">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
            <be:ColumnDataTypeConvertor ColumnIndex="{x:Null}" NullValue="{x:Null}" ColumnDataType="x:Int32" ColumnName="[{&quot;ID&quot;}]" DisplayName="Change Column DataType" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ColumnDataTypeConvertor_1" InDataTable="[DT_descargarSolo]" OutDataTable="[DT_descargarSolo]" />
            <be:ColumnDataTypeConvertor ColumnIndex="{x:Null}" NullValue="{x:Null}" ColumnDataType="x:Int32" ColumnName="[{&quot;ID&quot;}]" DisplayName="Change Column DataType" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="ColumnDataTypeConvertor_2" InDataTable="[DtqueryFiltred]" OutDataTable="[DtqueryFiltred]" />
            <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="ID" DataTable="[DT_descargarSolo]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" OutputDataTable="[DT_descargarSolo]" SortOrder="Ascending" />
            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_64">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[IndexlastNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[DT_descargarSolo.Rows.Count]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_65">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[firstNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[DT_descargarSolo.Rows(0).Item("ID")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_66">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[lastNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[DT_descargarSolo.Rows(IndexLastNumber -1).Item("ID")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Filtramos el query.iqy para quedarnos solo con lo que queremos tratar" DataTable="[DtqueryFiltred]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="333.6,206.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[DtqueryFiltred]" SelectColumnsMode="Remove">
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="GTE">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["ID"]</InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:Object">[firstNumber]</InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="LTE">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["ID"]</InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:Object">[lastNumber]</InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:FilterDataTable>
            <Assign sap2010:Annotation.AnnotationText="Pasamos la DT donde comparamos los casos a array" sap:VirtualizedContainerService.HintSize="333.6,104" sap2010:WorkflowViewState.IdRef="Assign_60">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[descargarSolo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[DT_descargarSolo.AsEnumerable().Select(Function (x) x.Field(of Int32)("ID").ToString).ToArray()]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DtqueryFiltred]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1386.4,1467.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1344.8,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="524.8,341.6" sap2010:WorkflowViewState.IdRef="Sequence_249">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[CurrentRow(&quot;Email ID Key&quot;).ToString = &quot;24477&quot; or CurrentRow(&quot;ID&quot;).ToString = &quot;39677&quot;]" sap:VirtualizedContainerService.HintSize="483.2,248.8" sap2010:WorkflowViewState.IdRef="If_63">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_34" />
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_229">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <If sap2010:Annotation.AnnotationText="Si no está el &quot;ID&quot; en el documento actual de solo descarga, no lo descargamos" Condition="[NOT(descargarSolo.Contains(CurrentRow(&quot;ID&quot;).ToString))]" sap:VirtualizedContainerService.HintSize="1344.8,280" sap2010:WorkflowViewState.IdRef="If_52">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_33" />
                    </If.Then>
                  </If>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1344.8,961.6" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="1308,730.4" sap2010:WorkflowViewState.IdRef="Sequence_46">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1266.4,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString.ToLower.Trim]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[RowCase.Substring(RowCase.Length-3)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[RowCase]" sap:VirtualizedContainerService.HintSize="1266.4,268" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                          <Switch.Default>
                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">NoDescargar</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Switch.Default>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign x:Key="pdf" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">descargar</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="lsx" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">descargar</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="xls" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">descargar</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="ocx" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">descargar</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="doc" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">descargar</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="rtf" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">descargar</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If x:Key="png" Condition="[CurrentRow(&quot;TipoDocumentalSVH&quot;).ToString = &quot;Justificante Notificación juzgado&quot;]" sap:VirtualizedContainerService.HintSize="506.4,219.2" sap2010:WorkflowViewState.IdRef="If_103">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[RowCase]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">descargarImagen</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_47" />
                            </If.Else>
                          </If>
                        </Switch>
                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[RowCase]" sap:VirtualizedContainerService.HintSize="1266.4,159.2" sap2010:WorkflowViewState.IdRef="Switch`1_5">
                          <Switch.Default>
                            <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_31" />
                          </Switch.Default>
                          <Sequence x:Key="descargar" sap:VirtualizedContainerService.HintSize="1226.4,4252" sap2010:WorkflowViewState.IdRef="Sequence_285">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Creamos el nombre de la carpeta para crear y descargar el pdf, con el ID del PJ, haciendo que se cree con el siguiente formato: &quot;1234/12345678&quot;, sustituyendo la&quot;/&quot; por &quot;_&quot;" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1184.8,237.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="s:String[]">[arrayIdDelPjCorrectName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="s:String[]">[CurrentRow("IdDelPj").ToString.Split("/"c)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[IdDelPjCorrectName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[string.Concat(arrayIdDelPjCorrectName(0).PadLeft(4,"0"c),"/",arrayIdDelPjCorrectName(1).PadLeft(8,"0"c))]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[FolderToCreate]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Config("FolderToCreate").ToString + IdDelPjCorrectName.Replace("/","_").Replace("	","_").Replace("\","_").Replace("*","_").Replace("?","_") + "\" + CurrentRow("Nombre").ToString.trim.Replace("Operaciones-","").Replace("Procesal-","").Substring(0,16) + " -   " + CurrentRow("EmailIdKey").ToString.Replace("/","_").Replace("	","_").Replace("\","_").Replace("*","_").Replace("?","_").Replace(chr(34),"'").Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:PathExists sap2010:Annotation.AnnotationText="Miramos si exsiste la carpeta anterior" DisplayName="Path Exists" Exists="[existFolderToCreate]" sap:VirtualizedContainerService.HintSize="1184.8,121.6" sap2010:WorkflowViewState.IdRef="PathExists_8" Path="[FolderToCreate]" PathType="Folder">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:PathExists>
                            <If Condition="[NOT(existFolderToCreate)]" sap:VirtualizedContainerService.HintSize="1184.8,272.8" sap2010:WorkflowViewState.IdRef="If_73">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <TryCatch sap2010:Annotation.AnnotationText="NO existe la carpeta" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="TryCatch_50">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,358.4" sap2010:WorkflowViewState.IdRef="Sequence_250">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Creamos la carpeta" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,112" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[FolderToCreate]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CreateDirectory>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Write_Log workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_120" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Write_Log.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogType">[in_config("in_LogType_Info").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogDescription">["Se ha creado la carpeta " + FolderToCreate]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogName">[in_fullNameFileLog]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_50">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence sap:VirtualizedContainerService.HintSize="525.6,804" sap2010:WorkflowViewState.IdRef="Sequence_253">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_121" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Al crear la carpeta</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="484,457.6" sap2010:WorkflowViewState.IdRef="If_72">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,268.8" sap2010:WorkflowViewState.IdRef="Sequence_251">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_122" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_12" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_252">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </If.Then>
                            </If>
                            <TryCatch sap2010:Annotation.AnnotationText="SI existe la carpeta" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1184.8,3314.4" sap2010:WorkflowViewState.IdRef="TryCatch_52">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <Sequence sap:VirtualizedContainerService.HintSize="1148,3052" sap2010:WorkflowViewState.IdRef="Sequence_268">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="1106.4,2784.8" sap2010:WorkflowViewState.IdRef="OpenBrowser_10" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString]">
                                    <ui:OpenBrowser.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1072.8,2682.4" sap2010:WorkflowViewState.IdRef="Sequence_267">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Boolean" Name="existFile" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="1031.2,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[PdfUlr]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:NavigateTo Browser="{x:Null}" sap2010:Annotation.AnnotationText="Entramos en la ULR del documento a descargar" DisplayName="Navigate To" sap:VirtualizedContainerService.HintSize="1031.2,91.2" sap2010:WorkflowViewState.IdRef="NavigateTo_9" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString + PdfUlr]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:NavigateTo>
                                          <Assign sap:VirtualizedContainerService.HintSize="1031.2,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString.Replace("["," ").Replace("]"," ")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1031.2,1632" sap2010:WorkflowViewState.IdRef="TryCatch_51">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <If Condition="[FolderName.Count &lt; 125]" sap:VirtualizedContainerService.HintSize="994.4,1400.8" sap2010:WorkflowViewState.IdRef="If_78">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="475.2,1241.6" sap2010:WorkflowViewState.IdRef="Sequence_258">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString.Replace("["," ").Replace("]"," ")]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:GetLastDownloadedFile File="{x:Null}" Timeout="{x:Null}" DisplayName="Wait for Download" DownloadFolder="[FolderToCreate]" sap:VirtualizedContainerService.HintSize="433.6,808.8" sap2010:WorkflowViewState.IdRef="GetLastDownloadedFile_3">
                                                      <ui:GetLastDownloadedFile.Body>
                                                        <ActivityAction>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,599.2" sap2010:WorkflowViewState.IdRef="Sequence_256">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:UiElementExists DisplayName="Element Exists 'H1  errortitle'" Exists="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_9">
                                                              <ui:UiElementExists.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a434a234-5c9b-446a-b4af-5298d31b6a30" InformativeScreenshot="f4858c5899b5427511f5e1fdfed707d0" Selector="&lt;webctrl tag='H1' aaname='Se ha producido un error' /&gt;" TimeoutMS="2000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:UiElementExists.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:UiElementExists>
                                                            <If Condition="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_74">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,289.6" sap2010:WorkflowViewState.IdRef="Sequence_254">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_8" ProcessName="chrome" />
                                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Continue_38" />
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_255">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + FolderName]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1500" DelayMS="500" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="333.6,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_16" Text="[FullFileName + &quot;[k(enter)]&quot;]">
                                                              <ui:TypeInto.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:TypeInto.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:TypeInto>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:GetLastDownloadedFile.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:GetLastDownloadedFile>
                                                    <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="433.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_10">
                                                      <ui:UiElementExists.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="1000">
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:UiElementExists.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:UiElementExists>
                                                    <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_75">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                          <ui:Click.CursorPosition>
                                                            <ui:CursorPosition Position="Center">
                                                              <ui:CursorPosition.OffsetX>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:CursorPosition.OffsetX>
                                                              <ui:CursorPosition.OffsetY>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:CursorPosition.OffsetY>
                                                            </ui:CursorPosition>
                                                          </ui:Click.CursorPosition>
                                                          <ui:Click.Target>
                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                              <ui:Target.TimeoutMS>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:Target.TimeoutMS>
                                                              <ui:Target.WaitForReady>
                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                              </ui:Target.WaitForReady>
                                                            </ui:Target>
                                                          </ui:Click.Target>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:Click>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_257">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="475.2,1241.6" sap2010:WorkflowViewState.IdRef="Sequence_263">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[PDFNombre.Substring(0,120) + PDFNombre.Substring(PDFNombre.Length-5)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:GetLastDownloadedFile File="{x:Null}" Timeout="{x:Null}" DisplayName="Wait for Download" DownloadFolder="[FolderToCreate]" sap:VirtualizedContainerService.HintSize="433.6,808.8" sap2010:WorkflowViewState.IdRef="GetLastDownloadedFile_4">
                                                      <ui:GetLastDownloadedFile.Body>
                                                        <ActivityAction>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,599.2" sap2010:WorkflowViewState.IdRef="Sequence_261">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:UiElementExists DisplayName="Element Exists 'H1  errortitle'" Exists="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_11">
                                                              <ui:UiElementExists.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a434a234-5c9b-446a-b4af-5298d31b6a30" InformativeScreenshot="f4858c5899b5427511f5e1fdfed707d0" Selector="&lt;webctrl tag='H1' aaname='Se ha producido un error' /&gt;" TimeoutMS="2000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:UiElementExists.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:UiElementExists>
                                                            <If Condition="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_76">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,289.6" sap2010:WorkflowViewState.IdRef="Sequence_259">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_9" ProcessName="chrome" />
                                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Continue_39" />
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_260">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + FolderName.Substring(0,120) + FolderName.Substring(FolderName.Length-5)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1500" DelayMS="500" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="333.6,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_17" Text="[FullFileName + &quot;[k(enter)]&quot;]">
                                                              <ui:TypeInto.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:TypeInto.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:TypeInto>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:GetLastDownloadedFile.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:GetLastDownloadedFile>
                                                    <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="433.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_12">
                                                      <ui:UiElementExists.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="1000">
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:UiElementExists.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:UiElementExists>
                                                    <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_77">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                          <ui:Click.CursorPosition>
                                                            <ui:CursorPosition Position="Center">
                                                              <ui:CursorPosition.OffsetX>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:CursorPosition.OffsetX>
                                                              <ui:CursorPosition.OffsetY>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:CursorPosition.OffsetY>
                                                            </ui:CursorPosition>
                                                          </ui:Click.CursorPosition>
                                                          <ui:Click.Target>
                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                              <ui:Target.TimeoutMS>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:Target.TimeoutMS>
                                                              <ui:Target.WaitForReady>
                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                              </ui:Target.WaitForReady>
                                                            </ui:Target>
                                                          </ui:Click.Target>
                                                        </ui:Click>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_262">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="997.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_51">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="525.6,1548" sap2010:WorkflowViewState.IdRef="Sequence_266">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:Boolean" Name="existRelogin" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLInsertError workflow" sap:VirtualizedContainerService.HintSize="484,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_123" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLInsertError.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowNombre">[CurrentRow("Nombre").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowId">[CurrentRow("ID").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowEmailIdKey">[CurrentRow("Email ID Key").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowIdDelPJ">[CurrentRow("ID del PJ").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowResumenSolicitud">[CurrentRow("Resumen Solicitud").ToString.Replace(chr(13)," ").Replace(chr(10)," ")]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowError">No se ha podido descargar el documento, intentelo manualmente</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowTipoDocumentalSVH">[CurrentRow("Tipo Documental SVH").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_RowAUTOS">[CurrentRow("AUTOS").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:InvokeWorkflowFile>
                                                    <ui:UiElementExists DisplayName="Element Exists 'DIV  lightbox'" Exists="[existRelogin]" sap:VirtualizedContainerService.HintSize="484,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_13">
                                                      <ui:UiElementExists.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec93dd56-0198-4793-81fc-4bf41f128976" InformativeScreenshot="ba17051c85d7dc56802abc3fd10ed3cc" Selector="&lt;webctrl id='lightbox' tag='DIV' /&gt;" TimeoutMS="4000">
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:UiElementExists.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:UiElementExists>
                                                    <If Condition="[existRelogin]" sap:VirtualizedContainerService.HintSize="484,683.2" sap2010:WorkflowViewState.IdRef="If_79">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,494.4" sap2010:WorkflowViewState.IdRef="Sequence_264">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7c63a017-7f46-4c66-8982-0da16b933a5d" InformativeScreenshot="28089459cc61be6f464fe42121a38e17" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' idx='2' parentid='tilesHolder' tag='DIV' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:Click>
                                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="187b81f4-0489-4e8e-b2cc-3032018ea9f1" InformativeScreenshot="5399d35ae1b4d25790c8c14cc3c6fc19" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:Click>
                                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="1000" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="83f79fbc-be20-4fa1-a51c-9a3174674cc6" InformativeScreenshot="d1e621ead7d1f9d0cf5e29e77e5ee646" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:Click>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_265">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <ui:AppendLine DisplayName="Append Line" FileName="[in_fullNameFileLog]" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="AppendLine_10" Text="[&quot;No se ha podido descargar el documento con ID: &quot; + CurrentRow(&quot;ID&quot;).ToString + &quot;. Es necesario descargarselo manualmente.&quot;]" UseDefaultEncoding="False">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:AppendLine>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_124" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">["No se ha podido descargar el documento con ID: " + CurrentRow("ID").ToString + ". Es necesario descargarselo manualmente."]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:InvokeWorkflowFile>
                                                    <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="484,51.2" sap2010:WorkflowViewState.IdRef="KillProcess_10" ProcessName="chrome" />
                                                    <ui:Continue sap:VirtualizedContainerService.HintSize="484,22.4" sap2010:WorkflowViewState.IdRef="Continue_40" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <ui:PathExists DisplayName="Path Exists" Exists="[existFile]" sap:VirtualizedContainerService.HintSize="1031.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_9" Path="[FullFileName]" PathType="File">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:PathExists>
                                          <If Condition="[existFile]" sap:VirtualizedContainerService.HintSize="1031.2,302.4" sap2010:WorkflowViewState.IdRef="If_80">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLRetryInsertGood workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_125" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLRetryInsertGood.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_RowId">[CurrentRow("Id").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FullFileName">[FullFileName]</InArgument>
                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_currentDate">[DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </If.Then>
                                          </If>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Write_Log workflow" sap:VirtualizedContainerService.HintSize="1031.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_126" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Write_Log.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogType">[in_config("in_LogType_Info").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogDescription">["Se ha descargado en la carpeta " + FolderToCreate + " el documento -&gt; " + CurrentRow("Nombre").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogName">[in_fullNameFileLog]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:OpenBrowser.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:OpenBrowser>
                                  <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="1106.4,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_11" ProcessName="chrome" />
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1151.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_52">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap:VirtualizedContainerService.HintSize="524.8,1000.8" sap2010:WorkflowViewState.IdRef="Sequence_271">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="483.2,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_12" ProcessName="chrome" />
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="483.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_127" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">[" Al descargar el documento: " + CurrentRow("Nombre").ToString + ". Excepción: " + exception.Message]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="483.2,489.6" sap2010:WorkflowViewState.IdRef="If_81">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,268.8" sap2010:WorkflowViewState.IdRef="Sequence_269">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_128" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_13" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_270">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1184.8,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,176.8" sap2010:WorkflowViewState.IdRef="Sequence_284">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch sap2010:Annotation.AnnotationText="SI existe la carpeta" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="TryCatch_54">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="1247.2,2233.6" sap2010:WorkflowViewState.IdRef="Sequence_280">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="1205.6,1966.4" sap2010:WorkflowViewState.IdRef="OpenBrowser_11" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString]">
                                          <ui:OpenBrowser.Body>
                                            <ActivityAction x:TypeArguments="x:Object">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1172,1864" sap2010:WorkflowViewState.IdRef="Sequence_279">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="1130.4,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[PdfUlr]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:NavigateTo Browser="{x:Null}" sap2010:Annotation.AnnotationText="Entramos en la ULR del documento a descargar" DisplayName="Navigate To" sap:VirtualizedContainerService.HintSize="1130.4,91.2" sap2010:WorkflowViewState.IdRef="NavigateTo_10" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString + PdfUlr]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:NavigateTo>
                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1130.4,1232.8" sap2010:WorkflowViewState.IdRef="TryCatch_53">
                                                  <TryCatch.Variables>
                                                    <Variable x:TypeArguments="x:Boolean" Name="existReemplazar" />
                                                  </TryCatch.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch.Try>
                                                    <If Condition="[CurrentRow(&quot;Nombre&quot;).ToString.Count &lt; 250]" sap:VirtualizedContainerService.HintSize="1093.6,1001.6" sap2010:WorkflowViewState.IdRef="If_84">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="524.8,842.4" sap2010:WorkflowViewState.IdRef="Sequence_273">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1000" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="483.2,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_18" Text="[FolderToCreate +&quot;\&quot; + CurrentRow(&quot;Nombre&quot;).ToString + &quot;[k(enter)]&quot;]">
                                                            <ui:TypeInto.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:TypeInto.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:TypeInto>
                                                          <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_14">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="1000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,296" sap2010:WorkflowViewState.IdRef="If_82">
                                                            <If.Then>
                                                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                <ui:Click.CursorPosition>
                                                                  <ui:CursorPosition Position="Center">
                                                                    <ui:CursorPosition.OffsetX>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetX>
                                                                    <ui:CursorPosition.OffsetY>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetY>
                                                                  </ui:CursorPosition>
                                                                </ui:Click.CursorPosition>
                                                                <ui:Click.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:Click.Target>
                                                              </ui:Click>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_272">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + CurrentRow("Nombre").ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="524.8,842.4" sap2010:WorkflowViewState.IdRef="Sequence_275">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1000" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="483.2,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_19" Text="[FolderToCreate +&quot;\&quot; + CurrentRow(&quot;Nombre&quot;).ToString.Substring(0,250) + CurrentRow(&quot;Nombre&quot;).ToString.Substring(CurrentRow(&quot;Nombre&quot;).ToString.Length-5) + &quot;[k(enter)]&quot;]">
                                                            <ui:TypeInto.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:TypeInto.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:TypeInto>
                                                          <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_15">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="1000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,296" sap2010:WorkflowViewState.IdRef="If_83">
                                                            <If.Then>
                                                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_17" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                <ui:Click.CursorPosition>
                                                                  <ui:CursorPosition Position="Center">
                                                                    <ui:CursorPosition.OffsetX>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetX>
                                                                    <ui:CursorPosition.OffsetY>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetY>
                                                                  </ui:CursorPosition>
                                                                </ui:Click.CursorPosition>
                                                                <ui:Click.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:Click.Target>
                                                              </ui:Click>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_274">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + CurrentRow("Nombre").ToString.Substring(0,250) + CurrentRow("Nombre").ToString.Substring(CurrentRow("Nombre").ToString.Length-5)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </TryCatch.Try>
                                                  <TryCatch.Catches>
                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1096.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_53">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                        </ActivityAction.Argument>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="525.6,1472.8" sap2010:WorkflowViewState.IdRef="Sequence_278">
                                                          <Sequence.Variables>
                                                            <Variable x:TypeArguments="x:Boolean" Name="existRelogin" />
                                                          </Sequence.Variables>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:UiElementExists DisplayName="Element Exists 'DIV  lightbox'" Exists="[existRelogin]" sap:VirtualizedContainerService.HintSize="484,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_16">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec93dd56-0198-4793-81fc-4bf41f128976" InformativeScreenshot="ba17051c85d7dc56802abc3fd10ed3cc" Selector="&lt;webctrl id='lightbox' tag='DIV' /&gt;" TimeoutMS="4000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:UiElementExists>
                                                          <If Condition="[existRelogin]" sap:VirtualizedContainerService.HintSize="484,683.2" sap2010:WorkflowViewState.IdRef="If_85">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,494.4" sap2010:WorkflowViewState.IdRef="Sequence_276">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayBefore="500" DelayMS="500" DisplayName="Click 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_18" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7c63a017-7f46-4c66-8982-0da16b933a5d" InformativeScreenshot="28089459cc61be6f464fe42121a38e17" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' idx='2' parentid='tilesHolder' tag='DIV' /&gt;" TimeoutMS="2000">
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_19" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="187b81f4-0489-4e8e-b2cc-3032018ea9f1" InformativeScreenshot="5399d35ae1b4d25790c8c14cc3c6fc19" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_20" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="83f79fbc-be20-4fa1-a51c-9a3174674cc6" InformativeScreenshot="d1e621ead7d1f9d0cf5e29e77e5ee646" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_277">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <ui:AppendLine DisplayName="Append Line" FileName="[in_fullNameFileLog]" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="AppendLine_11" Text="[&quot;No se ha podido descargar el documento con ID: &quot; + CurrentRow(&quot;ID&quot;).ToString + &quot;. Es necesario descargarselo manualmente.&quot;]" UseDefaultEncoding="False" />
                                                          <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="KillProcess_13" ProcessName="chrome" />
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_129" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">["No se ha podido descargar el documento con ID: " + CurrentRow("ID").ToString + ". Es necesario descargarselo manualmente."]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                          <ui:Continue sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Continue_41" />
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </Catch>
                                                  </TryCatch.Catches>
                                                </TryCatch>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLRetryInsertGood workflow" sap:VirtualizedContainerService.HintSize="1130.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_130" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLRetryInsertGood.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_RowId">[CurrentRow("Id").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FullFileName">[FullFileName]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_currentDate">[DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Write_Log workflow" sap:VirtualizedContainerService.HintSize="1130.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_131" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Write_Log.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogType">[in_config("in_LogType_Info").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogDescription">["Se ha descargado en la carpeta " + FolderToCreate + " el documento -&gt; " + CurrentRow("Nombre").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogName">[in_fullNameFileLog]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:OpenBrowser.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:OpenBrowser>
                                        <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="1205.6,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_14" ProcessName="chrome" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1250.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_54">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="525.6,797.6" sap2010:WorkflowViewState.IdRef="Sequence_283">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_132" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">[" Al descargar el documento: " + CurrentRow("Nombre").ToString + ". Excepción: " + exception.Message]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_86">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_281">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_133" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_14" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_282">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                          </Sequence>
                          <Sequence x:Key="descargarImagen" sap:VirtualizedContainerService.HintSize="1226.4,5240.8" sap2010:WorkflowViewState.IdRef="Sequence_323">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Creamos el nombre de la carpeta para crear y descargar el pdf, con el ID del PJ, haciendo que se cree con el siguiente formato: &quot;1234/12345678&quot;, sustituyendo la&quot;/&quot; por &quot;_&quot;" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1184.8,237.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="s:String[]">[arrayIdDelPjCorrectName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="s:String[]">[CurrentRow("IdDelPj").ToString.Split("/"c)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[IdDelPjCorrectName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[string.Concat(arrayIdDelPjCorrectName(0).PadLeft(4,"0"c),"/",arrayIdDelPjCorrectName(1).PadLeft(8,"0"c))]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[FolderToCreate]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Config("FolderToCreate").ToString + IdDelPjCorrectName.Replace("/","_").Replace("	","_").Replace("\","_").Replace("*","_").Replace("?","_") + "\" + CurrentRow("Nombre").ToString.trim.Replace("Operaciones-","").Replace("Procesal-","").Substring(0,16) + " -   " + CurrentRow("EmailIdKey").ToString.Replace("/","_").Replace("	","_").Replace("\","_").Replace("*","_").Replace("?","_").Replace(chr(34),"'").Trim]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:PathExists sap2010:Annotation.AnnotationText="Miramos si exsiste la carpeta anterior" DisplayName="Path Exists" Exists="[existFolderToCreate]" sap:VirtualizedContainerService.HintSize="1184.8,121.6" sap2010:WorkflowViewState.IdRef="PathExists_10" Path="[FolderToCreate]" PathType="Folder">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:PathExists>
                            <If Condition="[NOT(existFolderToCreate)]" sap:VirtualizedContainerService.HintSize="1184.8,809.6" sap2010:WorkflowViewState.IdRef="If_88">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <TryCatch sap2010:Annotation.AnnotationText="NO existe la carpeta" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,620.8" sap2010:WorkflowViewState.IdRef="TryCatch_55">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,358.4" sap2010:WorkflowViewState.IdRef="Sequence_286">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Creamos la carpeta" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,112" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[FolderToCreate]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CreateDirectory>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Write_Log workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_134" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Write_Log.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogType">[in_config("in_LogType_Info").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogDescription">["Se ha creado la carpeta " + FolderToCreate]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogName">[in_fullNameFileLog]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_55">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence sap:VirtualizedContainerService.HintSize="524.8,804" sap2010:WorkflowViewState.IdRef="Sequence_289">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="483.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_135" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Al crear la carpeta</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="483.2,457.6" sap2010:WorkflowViewState.IdRef="If_87">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,268.8" sap2010:WorkflowViewState.IdRef="Sequence_287">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_136" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_15" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_288">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </If.Then>
                            </If>
                            <TryCatch sap2010:Annotation.AnnotationText="SI existe la carpeta" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1184.8,3766.4" sap2010:WorkflowViewState.IdRef="TryCatch_57">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <Sequence sap:VirtualizedContainerService.HintSize="1148,3504" sap2010:WorkflowViewState.IdRef="Sequence_306">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="1106.4,3236.8" sap2010:WorkflowViewState.IdRef="OpenBrowser_12" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString]">
                                    <ui:OpenBrowser.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1072.8,3134.4" sap2010:WorkflowViewState.IdRef="Sequence_305">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Boolean" Name="existFile" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="1031.2,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[PdfUlr]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:NavigateTo Browser="{x:Null}" sap2010:Annotation.AnnotationText="Entramos en la ULR del documento a descargar" DisplayName="Navigate To" sap:VirtualizedContainerService.HintSize="1031.2,91.2" sap2010:WorkflowViewState.IdRef="NavigateTo_11" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString + PdfUlr]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:NavigateTo>
                                          <Assign sap:VirtualizedContainerService.HintSize="1031.2,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString.Replace("["," ").Replace("]"," ")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1031.2,2084" sap2010:WorkflowViewState.IdRef="TryCatch_56">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <If Condition="[FolderName.Count &lt; 125]" sap:VirtualizedContainerService.HintSize="994.4,1852.8" sap2010:WorkflowViewState.IdRef="If_93">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="475.2,1693.6" sap2010:WorkflowViewState.IdRef="Sequence_295">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString.Replace("["," ").Replace("]"," ")]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:GetLastDownloadedFile File="{x:Null}" DisplayName="Wait for Download" DownloadFolder="[FolderToCreate]" sap:VirtualizedContainerService.HintSize="433.6,1500.8" sap2010:WorkflowViewState.IdRef="GetLastDownloadedFile_5" Timeout="10">
                                                      <ui:GetLastDownloadedFile.Body>
                                                        <ActivityAction>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,1291.2" sap2010:WorkflowViewState.IdRef="Sequence_294">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:UiElementExists DisplayName="Element Exists 'H1  errortitle'" Exists="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_17">
                                                              <ui:UiElementExists.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a434a234-5c9b-446a-b4af-5298d31b6a30" InformativeScreenshot="f4858c5899b5427511f5e1fdfed707d0" Selector="&lt;webctrl tag='H1' aaname='Se ha producido un error' /&gt;" TimeoutMS="2000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:UiElementExists.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:UiElementExists>
                                                            <If Condition="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_89">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="476.8,614.4" sap2010:WorkflowViewState.IdRef="Sequence_291">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="435.2,284.8" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                                                    <ui:CommentOut.Body>
                                                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,206.4" sap2010:WorkflowViewState.IdRef="Sequence_290">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLInsertError workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_137" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLInsertError.xaml">
                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowNombre">[FolderName]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowId">[CurrentRow("ID").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowEmailIdKey">[CurrentRow("Email ID Key").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowIdDelPJ">[CurrentRow("ID del PJ").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowResumenSolicitud">[CurrentRow("Resumen Solicitud").ToString.Replace(chr(13)," ").Replace(chr(10)," ")]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowError">No se ha podido descargar el documento, intentelo manualmente</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowTipoDocumentalSVH">[CurrentRow("Tipo Documental SVH").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowAUTOS">[CurrentRow("AUTOS").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </ui:InvokeWorkflowFile>
                                                                      </Sequence>
                                                                    </ui:CommentOut.Body>
                                                                  </ui:CommentOut>
                                                                  <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="435.2,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_15" ProcessName="chrome" />
                                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="435.2,22.4" sap2010:WorkflowViewState.IdRef="Continue_42" />
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_292">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + FolderName]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="tab" KeyModifiers="None" SpecialKey="True">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="982c4a42-e0d4-4445-acb0-3cd23ccb7123">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:SendHotkey>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="tab" KeyModifiers="None" SpecialKey="True">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="982c4a42-e0d4-4445-acb0-3cd23ccb7123">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:SendHotkey>
                                                            <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBefore="1000" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="333.6,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_25" Text="[&quot;[d(ctrl)]&quot; + &quot;s&quot; + &quot;[u(ctrl)]&quot;]">
                                                              <ui:TypeInto.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="6ad3126b-f332-4d57-85dd-19fa8e7e9f5c">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:TypeInto.Target>
                                                            </ui:TypeInto>
                                                            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1500" DelayMS="500" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="333.6,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_20" Text="[FullFileName + &quot;[k(enter)]&quot;]">
                                                              <ui:TypeInto.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:TypeInto.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:TypeInto>
                                                            <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_18">
                                                              <ui:UiElementExists.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="2000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:UiElementExists.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:UiElementExists>
                                                            <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_90">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="1000" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_21" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_293">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:GetLastDownloadedFile.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:GetLastDownloadedFile>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="475.2,1693.6" sap2010:WorkflowViewState.IdRef="Sequence_301">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[PDFNombre.Substring(0,120) + PDFNombre.Substring(PDFNombre.Length-5)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:GetLastDownloadedFile File="{x:Null}" DisplayName="Wait for Download" DownloadFolder="[FolderToCreate]" sap:VirtualizedContainerService.HintSize="433.6,1500.8" sap2010:WorkflowViewState.IdRef="GetLastDownloadedFile_6" Timeout="10">
                                                      <ui:GetLastDownloadedFile.Body>
                                                        <ActivityAction>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,1291.2" sap2010:WorkflowViewState.IdRef="Sequence_330">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:UiElementExists DisplayName="Element Exists 'H1  errortitle'" Exists="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_25">
                                                              <ui:UiElementExists.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a434a234-5c9b-446a-b4af-5298d31b6a30" InformativeScreenshot="f4858c5899b5427511f5e1fdfed707d0" Selector="&lt;webctrl tag='H1' aaname='Se ha producido un error' /&gt;" TimeoutMS="2000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:UiElementExists.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:UiElementExists>
                                                            <If Condition="[existErrorCargarWeb]" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_104">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="476.8,614.4" sap2010:WorkflowViewState.IdRef="Sequence_327">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="435.2,284.8" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                                                                    <ui:CommentOut.Body>
                                                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,206.4" sap2010:WorkflowViewState.IdRef="Sequence_326">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLInsertError workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_150" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLInsertError.xaml">
                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowNombre">[FolderName]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowId">[CurrentRow("ID").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowEmailIdKey">[CurrentRow("Email ID Key").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowIdDelPJ">[CurrentRow("ID del PJ").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowResumenSolicitud">[CurrentRow("Resumen Solicitud").ToString.Replace(chr(13)," ").Replace(chr(10)," ")]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowError">No se ha podido descargar el documento, intentelo manualmente</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowTipoDocumentalSVH">[CurrentRow("Tipo Documental SVH").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_RowAUTOS">[CurrentRow("AUTOS").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </ui:InvokeWorkflowFile>
                                                                      </Sequence>
                                                                    </ui:CommentOut.Body>
                                                                  </ui:CommentOut>
                                                                  <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="435.2,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_22" ProcessName="chrome" />
                                                                  <ui:Continue sap:VirtualizedContainerService.HintSize="435.2,22.4" sap2010:WorkflowViewState.IdRef="Continue_48" />
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_328">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + FolderName]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="tab" KeyModifiers="None" SpecialKey="True">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="982c4a42-e0d4-4445-acb0-3cd23ccb7123">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:SendHotkey>
                                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_8" Key="tab" KeyModifiers="None" SpecialKey="True">
                                                              <ui:SendHotkey.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="982c4a42-e0d4-4445-acb0-3cd23ccb7123">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:SendHotkey.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:SendHotkey>
                                                            <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DelayBefore="1000" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="333.6,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_26" Text="[&quot;[d(ctrl)]&quot; + &quot;s&quot; + &quot;[u(ctrl)]&quot;]">
                                                              <ui:TypeInto.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="6ad3126b-f332-4d57-85dd-19fa8e7e9f5c">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:TypeInto.Target>
                                                            </ui:TypeInto>
                                                            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1500" DelayMS="500" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="333.6,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_27" Text="[FullFileName + &quot;[k(enter)]&quot;]">
                                                              <ui:TypeInto.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:TypeInto.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:TypeInto>
                                                            <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_26">
                                                              <ui:UiElementExists.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="2000">
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:UiElementExists.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:UiElementExists>
                                                            <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_105">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="1000" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_31" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_329">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:GetLastDownloadedFile.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:GetLastDownloadedFile>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="997.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_56">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,857.6" sap2010:WorkflowViewState.IdRef="Sequence_304">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:Boolean" Name="existRelogin" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:UiElementExists DisplayName="Element Exists 'DIV  lightbox'" Exists="[existRelogin]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_21">
                                                      <ui:UiElementExists.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec93dd56-0198-4793-81fc-4bf41f128976" InformativeScreenshot="ba17051c85d7dc56802abc3fd10ed3cc" Selector="&lt;webctrl id='lightbox' tag='DIV' /&gt;" TimeoutMS="4000">
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:UiElementExists.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:UiElementExists>
                                                    <If Condition="[existRelogin]" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_94">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,494.4" sap2010:WorkflowViewState.IdRef="Sequence_302">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_23" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7c63a017-7f46-4c66-8982-0da16b933a5d" InformativeScreenshot="28089459cc61be6f464fe42121a38e17" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' idx='2' parentid='tilesHolder' tag='DIV' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:Click>
                                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_24" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="187b81f4-0489-4e8e-b2cc-3032018ea9f1" InformativeScreenshot="5399d35ae1b4d25790c8c14cc3c6fc19" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:Click>
                                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="1000" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_25" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="83f79fbc-be20-4fa1-a51c-9a3174674cc6" InformativeScreenshot="d1e621ead7d1f9d0cf5e29e77e5ee646" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:Click>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_303">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <ui:AppendLine DisplayName="Append Line" FileName="[in_fullNameFileLog]" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="AppendLine_12" Text="[&quot;No se ha podido descargar el documento con ID: &quot; + CurrentRow(&quot;ID&quot;).ToString + &quot;. Es necesario descargarselo manualmente.&quot;]" UseDefaultEncoding="False">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:AppendLine>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_140" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">["No se ha podido descargar el documento con ID: " + CurrentRow("ID").ToString + ". Es necesario descargarselo manualmente."]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:InvokeWorkflowFile>
                                                    <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_17" ProcessName="chrome" />
                                                    <ui:Continue sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Continue_44" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <ui:PathExists DisplayName="Path Exists" Exists="[existFile]" sap:VirtualizedContainerService.HintSize="1031.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_11" Path="[FullFileName]" PathType="File">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:PathExists>
                                          <If Condition="[existFile]" sap:VirtualizedContainerService.HintSize="1031.2,302.4" sap2010:WorkflowViewState.IdRef="If_95">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLRetryInsertGood workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_141" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLRetryInsertGood.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_RowId">[CurrentRow("Id").ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FullFileName">[FullFileName]</InArgument>
                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_currentDate">[DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </If.Then>
                                          </If>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Write_Log workflow" sap:VirtualizedContainerService.HintSize="1031.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_142" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Write_Log.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogType">[in_config("in_LogType_Info").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogDescription">["Se ha descargado en la carpeta " + FolderToCreate + " el documento -&gt; " + CurrentRow("Nombre").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_LogName">[in_fullNameFileLog]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:OpenBrowser.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:OpenBrowser>
                                  <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="1106.4,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_18" ProcessName="chrome" />
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1151.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_57">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap:VirtualizedContainerService.HintSize="524.8,1000.8" sap2010:WorkflowViewState.IdRef="Sequence_309">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="483.2,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_19" ProcessName="chrome" />
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="483.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_143" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">[" Al descargar el documento: " + CurrentRow("Nombre").ToString + ". Excepción: " + exception.Message]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="483.2,489.6" sap2010:WorkflowViewState.IdRef="If_96">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,268.8" sap2010:WorkflowViewState.IdRef="Sequence_307">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_144" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_16" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_308">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1184.8,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,176.8" sap2010:WorkflowViewState.IdRef="Sequence_322">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch sap2010:Annotation.AnnotationText="SI existe la carpeta" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="TryCatch_59">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="1247.2,2233.6" sap2010:WorkflowViewState.IdRef="Sequence_318">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="1205.6,1966.4" sap2010:WorkflowViewState.IdRef="OpenBrowser_13" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString]">
                                          <ui:OpenBrowser.Body>
                                            <ActivityAction x:TypeArguments="x:Object">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1172,1864" sap2010:WorkflowViewState.IdRef="Sequence_317">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="1130.4,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[PdfUlr]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[CurrentRow("Nombre").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:NavigateTo Browser="{x:Null}" sap2010:Annotation.AnnotationText="Entramos en la ULR del documento a descargar" DisplayName="Navigate To" sap:VirtualizedContainerService.HintSize="1130.4,91.2" sap2010:WorkflowViewState.IdRef="NavigateTo_12" Url="[in_Config(&quot;WebGBOceanDocMail&quot;).ToString + PdfUlr]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:NavigateTo>
                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1130.4,1232.8" sap2010:WorkflowViewState.IdRef="TryCatch_58">
                                                  <TryCatch.Variables>
                                                    <Variable x:TypeArguments="x:Boolean" Name="existReemplazar" />
                                                  </TryCatch.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch.Try>
                                                    <If Condition="[CurrentRow(&quot;Nombre&quot;).ToString.Count &lt; 250]" sap:VirtualizedContainerService.HintSize="1093.6,1001.6" sap2010:WorkflowViewState.IdRef="If_99">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="524.8,842.4" sap2010:WorkflowViewState.IdRef="Sequence_311">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1000" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="483.2,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_22" Text="[FolderToCreate +&quot;\&quot; + CurrentRow(&quot;Nombre&quot;).ToString + &quot;[k(enter)]&quot;]">
                                                            <ui:TypeInto.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:TypeInto.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:TypeInto>
                                                          <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_22">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="1000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,296" sap2010:WorkflowViewState.IdRef="If_97">
                                                            <If.Then>
                                                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_26" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                <ui:Click.CursorPosition>
                                                                  <ui:CursorPosition Position="Center">
                                                                    <ui:CursorPosition.OffsetX>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetX>
                                                                    <ui:CursorPosition.OffsetY>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetY>
                                                                  </ui:CursorPosition>
                                                                </ui:Click.CursorPosition>
                                                                <ui:Click.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:Click.Target>
                                                              </ui:Click>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_310">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + CurrentRow("Nombre").ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="524.8,842.4" sap2010:WorkflowViewState.IdRef="Sequence_313">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Escribimos la ruta y el nombre del archivo" ClickBeforeTyping="True" DelayBefore="1000" DisplayName="Type Into 'Edit'" EmptyField="True" sap:VirtualizedContainerService.HintSize="483.2,166.4" sap2010:WorkflowViewState.IdRef="TypeInto_23" Text="[FolderToCreate +&quot;\&quot; + CurrentRow(&quot;Nombre&quot;).ToString.Substring(0,250) + CurrentRow(&quot;Nombre&quot;).ToString.Substring(CurrentRow(&quot;Nombre&quot;).ToString.Length-5) + &quot;[k(enter)]&quot;]">
                                                            <ui:TypeInto.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cda1dd8a-7ca0-4f78-bdd1-bf6b9e5c4c97" InformativeScreenshot="ffcb8999a144675272a0b07b2a9e9e6a" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Guardar como' /&gt;&lt;wnd aaname='Panel del explorador' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Nombre:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;" TimeoutMS="3000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:TypeInto.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:TypeInto>
                                                          <ui:UiElementExists DisplayName="Element Exists 'chrome.exe Confirmar'" Exists="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_23">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8483e499-2392-409e-9b6d-3443c979a2ff" InformativeScreenshot="39adad9c57ea262c80cd542e7f557907" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;ctrl name='Confirmar Guardar como' role='pane' /&gt;&lt;ctrl name='*' role='text' /&gt;" TimeoutMS="1000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[existReemplazar]" sap:VirtualizedContainerService.HintSize="483.2,296" sap2010:WorkflowViewState.IdRef="If_98">
                                                            <If.Then>
                                                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_27" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                <ui:Click.CursorPosition>
                                                                  <ui:CursorPosition Position="Center">
                                                                    <ui:CursorPosition.OffsetX>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetX>
                                                                    <ui:CursorPosition.OffsetY>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:CursorPosition.OffsetY>
                                                                  </ui:CursorPosition>
                                                                </ui:Click.CursorPosition>
                                                                <ui:Click.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5ef421e2-e3fe-4216-a1bf-09e8d064f89b" InformativeScreenshot="d7d32645cf5e98076e7253dc4b144bd0" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Confirmar Guardar como' /&gt;&lt;wnd aaname='Confirmar Guardar como' cls='DirectUIHWND' /&gt;&lt;wnd aaname='Sí' cls='Button' title='&amp;amp;Sí' /&gt;">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:Click.Target>
                                                              </ui:Click>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_312">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[FullFileName]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[FolderToCreate +"\" + CurrentRow("Nombre").ToString.Substring(0,250) + CurrentRow("Nombre").ToString.Substring(CurrentRow("Nombre").ToString.Length-5)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </TryCatch.Try>
                                                  <TryCatch.Catches>
                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1096.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_58">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                        </ActivityAction.Argument>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="525.6,1472.8" sap2010:WorkflowViewState.IdRef="Sequence_316">
                                                          <Sequence.Variables>
                                                            <Variable x:TypeArguments="x:Boolean" Name="existRelogin" />
                                                          </Sequence.Variables>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:UiElementExists DisplayName="Element Exists 'DIV  lightbox'" Exists="[existRelogin]" sap:VirtualizedContainerService.HintSize="484,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_24">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ec93dd56-0198-4793-81fc-4bf41f128976" InformativeScreenshot="ba17051c85d7dc56802abc3fd10ed3cc" Selector="&lt;webctrl id='lightbox' tag='DIV' /&gt;" TimeoutMS="4000">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:UiElementExists>
                                                          <If Condition="[existRelogin]" sap:VirtualizedContainerService.HintSize="484,683.2" sap2010:WorkflowViewState.IdRef="If_100">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,494.4" sap2010:WorkflowViewState.IdRef="Sequence_314">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayBefore="500" DelayMS="500" DisplayName="Click 'DIV'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_28" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7c63a017-7f46-4c66-8982-0da16b933a5d" InformativeScreenshot="28089459cc61be6f464fe42121a38e17" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div' idx='2' parentid='tilesHolder' tag='DIV' /&gt;" TimeoutMS="2000">
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_29" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="187b81f4-0489-4e8e-b2cc-3032018ea9f1" InformativeScreenshot="5399d35ae1b4d25790c8c14cc3c6fc19" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="500" DelayMS="500" DisplayName="Click 'INPUT  idSIButton9'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_30" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="83f79fbc-be20-4fa1-a51c-9a3174674cc6" InformativeScreenshot="d1e621ead7d1f9d0cf5e29e77e5ee646" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:Click>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_315">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <ui:AppendLine DisplayName="Append Line" FileName="[in_fullNameFileLog]" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="AppendLine_13" Text="[&quot;No se ha podido descargar el documento con ID: &quot; + CurrentRow(&quot;ID&quot;).ToString + &quot;. Es necesario descargarselo manualmente.&quot;]" UseDefaultEncoding="False" />
                                                          <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="KillProcess_20" ProcessName="chrome" />
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_145" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">["No se ha podido descargar el documento con ID: " + CurrentRow("ID").ToString + ". Es necesario descargarselo manualmente."]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                          </ui:InvokeWorkflowFile>
                                                          <ui:Continue sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Continue_45" />
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </Catch>
                                                  </TryCatch.Catches>
                                                </TryCatch>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLRetryInsertGood workflow" sap:VirtualizedContainerService.HintSize="1130.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_146" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLRetryInsertGood.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_RowId">[CurrentRow("Id").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FullFileName">[FullFileName]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_currentDate">[DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Write_Log workflow" sap:VirtualizedContainerService.HintSize="1130.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_147" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Write_Log.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogType">[in_config("in_LogType_Info").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogDescription">["Se ha descargado en la carpeta " + FolderToCreate + " el documento -&gt; " + CurrentRow("Nombre").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogName">[in_fullNameFileLog]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:OpenBrowser.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:OpenBrowser>
                                        <ui:KillProcess Process="{x:Null}" AppliesTo="All" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="1205.6,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_21" ProcessName="chrome" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1250.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_59">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="525.6,797.6" sap2010:WorkflowViewState.IdRef="Sequence_321">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_148" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">[" Al descargar el documento: " + CurrentRow("Nombre").ToString + ". Excepción: " + exception.Message]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_101">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_319">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_149" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_17" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_320">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                          </Sequence>
                        </Switch>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1311.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence sap:VirtualizedContainerService.HintSize="524.8,764" sap2010:WorkflowViewState.IdRef="Sequence_47">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="483.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">["Ocurrido antes de empezar a descargar los documentos. Excepcion: " + exception.Message]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="483.2,457.6" sap2010:WorkflowViewState.IdRef="If_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,268.8" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_57">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <TryCatch DisplayName="Try Catch sustituir lo de dentro por SQL" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_47">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SQLRetry workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_111" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SQLRetry.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_Documentos">[DtqueryFiltred]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_47">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="525.6,898.4" sap2010:WorkflowViewState.IdRef="Sequence_226">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[ErrorContador]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[ErrorContador + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="484,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_112" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText" xml:space="preserve">["No se ha podido abrir el excel con el histórico de los documentos ya descargados, posiblemente porque se dejó abierto. Por favor, cierre todos los exel y a continuación, haga click en aceptar para volver a intentarlo"  + exception.Message]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <If Condition="[ErrorContador &gt; 2]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_61">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,266" sap2010:WorkflowViewState.IdRef="Sequence_224">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Errors workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_113" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\Errors.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logAndTeamsText">Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_fullNameFileLog">[in_fullNameFileLog]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_10" Reason="Se ha cerrado el proceso, por haber fallado 3 veces en la misma ejecución" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_225">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Haga click en aceptar cuando cierre todos los archivos excel&quot;]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InterruptibleDoWhile>
  </Sequence>
</Activity>